name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ["", "app", "simple-starter", "spring-app", "spring-app-currency"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build and run tests
        run: |
          if [ "${{ matrix.module }}" == "" ]; then
            ./gradlew clean build test
          else
            ./gradlew :${{ matrix.module }}:clean :${{ matrix.module }}:build :${{ matrix.module }}:test
          fi

      - name: Generate test coverage report
        if: matrix.module == 'spring-app' || matrix.module == 'spring-app-currency'
        run: ./gradlew :${{ matrix.module }}:jacocoTestReport

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: matrix.module == 'spring-app' || matrix.module == 'spring-app-currency'
        with:
          name: coverage-report-${{ matrix.module }}
          path: ${{ matrix.module }}/build/reports/jacoco/test/html

      - name: Run Checkstyle
        if: matrix.module == 'spring-app' || matrix.module == 'spring-app-currency'
        run: ./gradlew :${{ matrix.module }}:checkstyleMain :${{ matrix.module }}:checkstyleTest

      - name: Upload Checkstyle report
        uses: actions/upload-artifact@v4
        if: matrix.module == 'spring-app' || matrix.module == 'spring-app-currency'
        with:
          name: checkstyle-report-${{ matrix.module }}
          path: ${{ matrix.module }}/build/reports/checkstyle

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    strategy:
      matrix:
        module: [spring-app, spring-app-currency]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/homework_1-${{ matrix.module }}:latest ./${{ matrix.module }}
          docker push ghcr.io/${{ github.repository_owner }}/homework_1-${{ matrix.module }}:latest